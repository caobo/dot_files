patch:
  # 菜单
  menu:
    page_size: 9  # 候选词个数
    # alternative_select_labels: [ ①, ②, ③, ④, ⑤, ⑥, ⑦, ⑧, ⑨, ⑩ ]  # 修改候选项标签
    # alternative_select_keys: ASDFGHJKL  # 如编码字符占用数字键，则需另设选字键
    # ascii_mode、inline、no_inline、vim_mode 等等设定，可参考 /Library/Input Methods/Squirrel.app/Contents/SharedSupport/squirrel.yaml
    # 中西文切换
    #
    # 【good_old_caps_lock】 CapsLock 切换到大写或切换中英。
    # （macOS 偏好设置的优先级更高，如果勾选【使用大写锁定键切换“ABC”输入法】则始终会切换输入法）
    #
    # 切换中英：
    # 不同的选项表示：打字打到一半时按下了 CapsLock、Shift、Control 后： 
    # commit_code  上屏原始的编码，然后切换到英文
    # commit_text  上屏拼出的词句，然后切换到英文
    # clear        清除未上屏内容，然后切换到英文
    # inline_ascii 无输入时，切换中英；有输入时，切换到临时英文模式，按回车上屏后回到中文状态
    # noop         屏蔽快捷键，不切换中英，但不要屏蔽 CapsLock
  ascii_composer:
    good_old_caps_lock: true  # true | false
    switch_key:
      Caps_Lock: clear  # commit_code | commit_text | clear
      Shift_L: clear     # commit_code | commit_text | inline_ascii | clear | noop
      Shift_R: clear     # commit_code | commit_text | inline_ascii | clear | noop
      Control_L: noop   # commit_code | commit_text | inline_ascii | clear | noop
      Control_R: noop   # commit_code | commit_text | inline_ascii | clear | noop

  schema_list:
    - schema: rime_ice

  key_binder:
    select_first_character: "comma"
    select_last_character: "period"

    bindings:
      # 翻页 [ ]
      - { when: paging, accept: bracketleft, send: Page_Up }
      - { when: has_menu, accept: bracketright, send: Page_Down }
      # Tab / Shift+Tab 切换光标至下/上一个拼音
      - { when: composing, accept: Shift+Tab, send: Shift+Left }
      - { when: composing, accept: Tab, send: Shift+Right }
      # numbered_mode_switch:
      # - { when: always, accept: Control+Shift+1, select: .next }               # 在最近的两个方案之间切换
      # - { when: always, accept: Control+Shift+2, toggle: ascii_mode }          # 切换中英
      - { when: always, accept: Control+Shift+3, toggle: ascii_punct }           # 切换中英标点
      - { when: always, accept: Control+Shift+4, toggle: traditionalization }    # 切换简繁
      # - { when: always, accept: Control+Shift+5, toggle: full_shape }          # 切换全半角
      - { when: composing, accept: Control+p, send: Left }
      - { when: composing, accept: Control+n, send: Right }
      # - { when: composing, accept: Control+b, send: Left }
      # - { when: composing, accept: Control+f, send: Right }
